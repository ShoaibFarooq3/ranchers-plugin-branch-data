type Branch {
  _id: ID!
  branchname: String!
  branchaddress: String!
  branchphonenumber: String!
  branchLat: Float
  branchLong: Float
  branchCity: String
  branchDescription: String
  createdAt: String
  updatedAt: String
  branchSector: String
  branchTiming: String
}

input UpdateBranchDataInput {
  branchname: String
  branchaddress: String
  branchphonenumber: String
  branchLat: Float
  longitude: Float
  branchCity: String
  branchDescription: String
  branchSector: String
  branchTiming: String
}

input CreateBranchInput {
  branchname: String!
  branchaddress: String!
  branchphonenumber: String!
  branchLat: Float
  longitude: Float
  branchCity: String
  branchDescription: String
  branchSector: String
  branchTiming: String
}

type Mutation {
  createBranch(input: CreateBranchInput!): Branch
  deleteBranch(branchname: String!): Branch
  updateBranchData(branchname: String!, input: UpdateBranchDataInput): Branch
}

type Query {
  branches: [Branch]
  getBranchByName(branchname: String!): Branch
}
