type Branch {
  _id: ID!
  branchname: String!
  branchaddress: [BranchAddress]!
  branchphonenumber: String!
  latitude: Float
  longitude: Float
}
input UpdateBranchDataInput {
  branchname: String
  branchaddress: [UpdateBranchAddressInput]
  branchphonenumber: String
  latitude: Float
  longitude: Float
}
input CreateBranchInput {
  branchname: String!
  branchaddress: [CreateBranchAddressInput]!
  branchphonenumber: String!
  latitude: Float
  longitude: Float
}

type Mutation {
  createBranch(input: CreateBranchInput!): Branch
  deleteBranch(branchname: String!): Branch
  updateBranchData(branchname: String!, input: UpdateBranchDataInput): Branch
}

type Query {
  branches: [Branch]
  getBranchByName(branchname: String!): Branch
}

type BranchAddress {
  branchstreet: String!
  branchcity: String!
  branchstate: String!
}

input UpdateBranchAddressInput {
  branchstreet: String
  branchcity: String
  branchstate: String
}
input CreateBranchAddressInput {
  branchstreet: String!
  branchcity: String!
  branchstate: String!
}
